$date
	Sun Jul 16 03:55:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testadder $end
$var wire 1 ! ZR $end
$var wire 1 " Sn $end
$var wire 16 # S [15:0] $end
$var wire 1 $ P $end
$var wire 1 % OV $end
$var wire 1 & C $end
$var reg 16 ' X [15:0] $end
$var reg 16 ( Y [15:0] $end
$scope module DUT $end
$var wire 16 ) in1 [15:0] $end
$var wire 16 * in2 [15:0] $end
$var wire 1 % overflow $end
$var wire 1 ! zero $end
$var wire 16 + sum [15:0] $end
$var wire 1 " sign $end
$var wire 1 $ parrity $end
$var wire 1 & carry $end
$var wire 3 , C [2:0] $end
$scope module A1 $end
$var wire 1 - cin $end
$var wire 4 . in1 [3:0] $end
$var wire 4 / in2 [3:0] $end
$var wire 4 0 sum [3:0] $end
$var wire 1 1 cout $end
$var wire 1 2 c3 $end
$var wire 1 3 c2 $end
$var wire 1 4 c1 $end
$scope module F1 $end
$var wire 1 - cin $end
$var wire 1 4 cout $end
$var wire 1 5 in1 $end
$var wire 1 6 in2 $end
$var wire 1 7 sum $end
$var wire 1 8 w1 $end
$var wire 1 9 w2 $end
$var wire 1 : w3 $end
$upscope $end
$scope module F2 $end
$var wire 1 4 cin $end
$var wire 1 3 cout $end
$var wire 1 ; in1 $end
$var wire 1 < in2 $end
$var wire 1 = sum $end
$var wire 1 > w1 $end
$var wire 1 ? w2 $end
$var wire 1 @ w3 $end
$upscope $end
$scope module F3 $end
$var wire 1 3 cin $end
$var wire 1 2 cout $end
$var wire 1 A in1 $end
$var wire 1 B in2 $end
$var wire 1 C sum $end
$var wire 1 D w1 $end
$var wire 1 E w2 $end
$var wire 1 F w3 $end
$upscope $end
$scope module F4 $end
$var wire 1 2 cin $end
$var wire 1 1 cout $end
$var wire 1 G in1 $end
$var wire 1 H in2 $end
$var wire 1 I sum $end
$var wire 1 J w1 $end
$var wire 1 K w2 $end
$var wire 1 L w3 $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 M cin $end
$var wire 4 N in1 [3:0] $end
$var wire 4 O in2 [3:0] $end
$var wire 4 P sum [3:0] $end
$var wire 1 Q cout $end
$var wire 1 R c3 $end
$var wire 1 S c2 $end
$var wire 1 T c1 $end
$scope module F1 $end
$var wire 1 M cin $end
$var wire 1 T cout $end
$var wire 1 U in1 $end
$var wire 1 V in2 $end
$var wire 1 W sum $end
$var wire 1 X w1 $end
$var wire 1 Y w2 $end
$var wire 1 Z w3 $end
$upscope $end
$scope module F2 $end
$var wire 1 T cin $end
$var wire 1 S cout $end
$var wire 1 [ in1 $end
$var wire 1 \ in2 $end
$var wire 1 ] sum $end
$var wire 1 ^ w1 $end
$var wire 1 _ w2 $end
$var wire 1 ` w3 $end
$upscope $end
$scope module F3 $end
$var wire 1 S cin $end
$var wire 1 R cout $end
$var wire 1 a in1 $end
$var wire 1 b in2 $end
$var wire 1 c sum $end
$var wire 1 d w1 $end
$var wire 1 e w2 $end
$var wire 1 f w3 $end
$upscope $end
$scope module F4 $end
$var wire 1 R cin $end
$var wire 1 Q cout $end
$var wire 1 g in1 $end
$var wire 1 h in2 $end
$var wire 1 i sum $end
$var wire 1 j w1 $end
$var wire 1 k w2 $end
$var wire 1 l w3 $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 m cin $end
$var wire 4 n in1 [3:0] $end
$var wire 4 o in2 [3:0] $end
$var wire 4 p sum [3:0] $end
$var wire 1 q cout $end
$var wire 1 r c3 $end
$var wire 1 s c2 $end
$var wire 1 t c1 $end
$scope module F1 $end
$var wire 1 m cin $end
$var wire 1 t cout $end
$var wire 1 u in1 $end
$var wire 1 v in2 $end
$var wire 1 w sum $end
$var wire 1 x w1 $end
$var wire 1 y w2 $end
$var wire 1 z w3 $end
$upscope $end
$scope module F2 $end
$var wire 1 t cin $end
$var wire 1 s cout $end
$var wire 1 { in1 $end
$var wire 1 | in2 $end
$var wire 1 } sum $end
$var wire 1 ~ w1 $end
$var wire 1 !" w2 $end
$var wire 1 "" w3 $end
$upscope $end
$scope module F3 $end
$var wire 1 s cin $end
$var wire 1 r cout $end
$var wire 1 #" in1 $end
$var wire 1 $" in2 $end
$var wire 1 %" sum $end
$var wire 1 &" w1 $end
$var wire 1 '" w2 $end
$var wire 1 (" w3 $end
$upscope $end
$scope module F4 $end
$var wire 1 r cin $end
$var wire 1 q cout $end
$var wire 1 )" in1 $end
$var wire 1 *" in2 $end
$var wire 1 +" sum $end
$var wire 1 ," w1 $end
$var wire 1 -" w2 $end
$var wire 1 ." w3 $end
$upscope $end
$upscope $end
$scope module A4 $end
$var wire 1 /" cin $end
$var wire 4 0" in1 [3:0] $end
$var wire 4 1" in2 [3:0] $end
$var wire 4 2" sum [3:0] $end
$var wire 1 & cout $end
$var wire 1 3" c3 $end
$var wire 1 4" c2 $end
$var wire 1 5" c1 $end
$scope module F1 $end
$var wire 1 /" cin $end
$var wire 1 5" cout $end
$var wire 1 6" in1 $end
$var wire 1 7" in2 $end
$var wire 1 8" sum $end
$var wire 1 9" w1 $end
$var wire 1 :" w2 $end
$var wire 1 ;" w3 $end
$upscope $end
$scope module F2 $end
$var wire 1 5" cin $end
$var wire 1 4" cout $end
$var wire 1 <" in1 $end
$var wire 1 =" in2 $end
$var wire 1 >" sum $end
$var wire 1 ?" w1 $end
$var wire 1 @" w2 $end
$var wire 1 A" w3 $end
$upscope $end
$scope module F3 $end
$var wire 1 4" cin $end
$var wire 1 3" cout $end
$var wire 1 B" in1 $end
$var wire 1 C" in2 $end
$var wire 1 D" sum $end
$var wire 1 E" w1 $end
$var wire 1 F" w2 $end
$var wire 1 G" w3 $end
$upscope $end
$scope module F4 $end
$var wire 1 3" cin $end
$var wire 1 & cout $end
$var wire 1 H" in1 $end
$var wire 1 I" in2 $end
$var wire 1 J" sum $end
$var wire 1 K" w1 $end
$var wire 1 L" w2 $end
$var wire 1 M" w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
bx 2"
bx 1"
bx 0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
bx p
bx o
bx n
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
bx P
bx O
bx N
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0:
x9
x8
x7
x6
x5
x4
x3
x2
x1
bx 0
bx /
bx .
0-
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
bx #
x"
x!
$end
#5
1$
08"
0/"
0q
1+"
0."
0r
1%"
0("
0s
1}
0""
0t
b1111 p
1w
0z
0m
0Q
1i
0l
0R
1c
0f
0S
1]
0`
0T
b1111 P
1W
0Z
0M
b0 ,
01
1%
1I
0L
02
1C
0F
0"
03
0>"
0D"
b0 2"
0J"
1=
0@
05"
04"
03"
1&
0!
b111111111111 #
b111111111111 +
b1111 0
17
04
0;"
0A"
0G"
0M"
18
09
1>
0?
1D
0E
1J
0K
1X
0Y
1^
0_
1d
0e
1j
0k
1x
0y
1~
0!"
1&"
0'"
1,"
0-"
09"
0:"
0?"
0@"
0E"
0F"
0K"
1L"
06
0<
0B
0H
0V
0\
0b
0h
0v
0|
0$"
0*"
07"
0="
0C"
1I"
15
1;
1A
1G
1U
1[
1a
1g
1u
1{
1#"
1)"
06"
0<"
0B"
1H"
b0 /
b0 O
b0 o
b1000 1"
b1111 .
b1111 N
b1111 n
b1000 0"
b1000000000000000 (
b1000000000000000 *
b1000111111111111 '
b1000111111111111 )
#10
1!
1M"
13"
1G"
14"
1A"
15"
1;"
1/"
1q
0+"
1."
1r
0%"
1("
1s
0}
1""
1t
b0 p
0w
1z
1m
1Q
0i
1l
1R
0c
1f
1S
0]
1`
1T
b0 P
0W
1Z
1M
b111 ,
11
0I
1L
12
0C
1F
0"
0=
13
0J"
1&
0%
b0 0
07
08"
0>"
1$
b0 #
b0 +
b0 2"
0D"
0>
1?
1K"
0L"
08
19"
1?"
1E"
1<
0I"
05
16"
1<"
1B"
b10 /
b0 1"
b1110 .
b1111 0"
b10 (
b10 *
b1111111111111110 '
b1111111111111110 )
#15
1"
0&
1J"
0M"
03"
1D"
0G"
04"
1>"
0A"
05"
b1111 2"
18"
0;"
0/"
0q
1+"
0."
0r
1%"
0("
0s
1}
0""
0t
b1111 p
1w
0z
0m
0Q
1i
0l
0R
1c
0f
0S
1]
0`
0T
b1111 P
1W
0Z
0M
b0 ,
01
1I
0L
02
1C
0F
17
0!
1$
b1111111111111111 #
b1111111111111111 +
b1111 0
1=
03
18
1>
0?
16
0<
1B
1V
1b
1v
1$"
17"
1C"
0A
0U
0a
0u
0#"
06"
0B"
b101 /
b101 O
b101 o
b101 1"
b1010 .
b1010 N
b1010 n
b1010 0"
b101010101010101 (
b101010101010101 *
b1010101010101010 '
b1010101010101010 )
#20
