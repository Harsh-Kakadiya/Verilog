$date
	Sun Jul 16 03:43:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testadder $end
$var wire 1 ! ZR $end
$var wire 1 " Sn $end
$var wire 16 # S [15:0] $end
$var wire 1 $ P $end
$var wire 1 % OV $end
$var wire 1 & C $end
$var reg 16 ' X [15:0] $end
$var reg 16 ( Y [15:0] $end
$scope module DUT $end
$var wire 16 ) in1 [15:0] $end
$var wire 16 * in2 [15:0] $end
$var wire 1 % overflow $end
$var wire 1 ! zero $end
$var wire 16 + sum [15:0] $end
$var wire 1 " sign $end
$var wire 1 $ parrity $end
$var wire 1 & carry $end
$var wire 3 , C [2:0] $end
$scope module A1 $end
$var wire 1 - c1 $end
$var wire 1 . c2 $end
$var wire 1 / c3 $end
$var wire 1 0 cin $end
$var wire 1 1 cout $end
$var wire 1 2 g0 $end
$var wire 1 3 g1 $end
$var wire 1 4 g2 $end
$var wire 1 5 g3 $end
$var wire 4 6 in1 [3:0] $end
$var wire 4 7 in2 [3:0] $end
$var wire 1 8 p0 $end
$var wire 1 9 p1 $end
$var wire 1 : p2 $end
$var wire 1 ; p3 $end
$var wire 4 < sum [3:0] $end
$upscope $end
$scope module A2 $end
$var wire 1 = c1 $end
$var wire 1 > c2 $end
$var wire 1 ? c3 $end
$var wire 1 @ cin $end
$var wire 1 A cout $end
$var wire 1 B g0 $end
$var wire 1 C g1 $end
$var wire 1 D g2 $end
$var wire 1 E g3 $end
$var wire 4 F in1 [3:0] $end
$var wire 4 G in2 [3:0] $end
$var wire 1 H p0 $end
$var wire 1 I p1 $end
$var wire 1 J p2 $end
$var wire 1 K p3 $end
$var wire 4 L sum [3:0] $end
$upscope $end
$scope module A3 $end
$var wire 1 M c1 $end
$var wire 1 N c2 $end
$var wire 1 O c3 $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R g0 $end
$var wire 1 S g1 $end
$var wire 1 T g2 $end
$var wire 1 U g3 $end
$var wire 4 V in1 [3:0] $end
$var wire 4 W in2 [3:0] $end
$var wire 1 X p0 $end
$var wire 1 Y p1 $end
$var wire 1 Z p2 $end
$var wire 1 [ p3 $end
$var wire 4 \ sum [3:0] $end
$upscope $end
$scope module A4 $end
$var wire 1 ] c1 $end
$var wire 1 ^ c2 $end
$var wire 1 _ c3 $end
$var wire 1 ` cin $end
$var wire 1 & cout $end
$var wire 1 a g0 $end
$var wire 1 b g1 $end
$var wire 1 c g2 $end
$var wire 1 d g3 $end
$var wire 4 e in1 [3:0] $end
$var wire 4 f in2 [3:0] $end
$var wire 1 g p0 $end
$var wire 1 h p1 $end
$var wire 1 i p2 $end
$var wire 1 j p3 $end
$var wire 4 k sum [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx k
xj
xi
xh
xg
bx f
bx e
xd
xc
xb
xa
x`
x_
x^
x]
bx \
x[
xZ
xY
xX
bx W
bx V
xU
xT
xS
xR
xQ
xP
xO
xN
xM
bx L
xK
xJ
xI
xH
bx G
bx F
xE
xD
xC
xB
xA
x@
x?
x>
x=
bx <
x;
x:
x9
x8
bx 7
bx 6
x5
x4
x3
x2
x1
00
x/
x.
x-
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
bx #
x"
x!
$end
#5
1$
0`
0Q
0O
0N
0M
b1111 \
0P
0A
0?
0>
0=
b1111 L
0@
1%
b0 ,
01
0/
0"
b0 k
0.
0]
0^
0_
0!
b111111111111 #
b111111111111 +
b1111 <
0-
1&
18
19
1:
1;
02
03
04
05
1H
1I
1J
1K
0B
0C
0D
0E
1X
1Y
1Z
1[
0R
0S
0T
0U
0g
0h
0i
0j
0a
0b
0c
1d
b0 7
b0 G
b0 W
b1000 f
b1111 6
b1111 F
b1111 V
b1000 e
b1000000000000000 (
b1000000000000000 *
b1000111111111111 '
b1000111111111111 )
#10
1!
1_
1^
1]
1`
1Q
1O
1N
1M
b0 \
1P
1A
1?
1>
1=
b0 L
1@
b111 ,
11
1/
0"
1.
1&
0%
b0 <
1$
b0 #
b0 +
b0 k
09
13
1j
0d
08
1g
1h
1i
b10 7
b0 f
b1110 6
b1111 e
b10 (
b10 *
b1111111111111110 '
b1111111111111110 )
#15
0&
1"
0_
0^
0]
b1111 k
0`
0Q
0O
0N
0M
b1111 \
0P
0A
0?
0>
0=
b1111 L
0@
b0 ,
01
0/
0!
1$
b1111111111111111 #
b1111111111111111 +
b1111 <
0.
18
19
03
b101 7
b101 G
b101 W
b101 f
b1010 6
b1010 F
b1010 V
b1010 e
b101010101010101 (
b101010101010101 *
b1010101010101010 '
b1010101010101010 )
#20
