$date
	Sun Jul 16 03:08:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mul16_test $end
$var wire 1 ! ldP $end
$var wire 1 " ldB $end
$var wire 1 # ldA $end
$var wire 1 $ eqz $end
$var wire 1 % done $end
$var wire 1 & decB $end
$var wire 1 ' clrP $end
$var reg 1 ( clk $end
$var reg 16 ) data_in [15:0] $end
$var reg 1 * start $end
$scope module CN $end
$var wire 1 ( clk $end
$var wire 1 * start $end
$var wire 1 $ eqz $end
$var parameter 3 + S0 $end
$var parameter 3 , S1 $end
$var parameter 3 - S2 $end
$var parameter 3 . S3 $end
$var parameter 3 / S4 $end
$var reg 1 ' clrP $end
$var reg 1 & decB $end
$var reg 1 % done $end
$var reg 1 # ldA $end
$var reg 1 " ldB $end
$var reg 1 ! ldP $end
$var reg 3 0 state [2:0] $end
$upscope $end
$scope module DP $end
$var wire 1 ( clk $end
$var wire 1 ' clrP $end
$var wire 16 1 data_in [15:0] $end
$var wire 1 & decB $end
$var wire 1 # ldA $end
$var wire 1 " ldB $end
$var wire 1 ! ldP $end
$var wire 1 $ eqz $end
$var wire 16 2 Z [15:0] $end
$var wire 16 3 Y [15:0] $end
$var wire 16 4 X [15:0] $end
$var wire 16 5 Bout [15:0] $end
$scope module A $end
$var wire 1 ( clk $end
$var wire 16 6 in [15:0] $end
$var wire 1 # load $end
$var reg 16 7 out [15:0] $end
$upscope $end
$scope module B $end
$var wire 1 ( clk $end
$var wire 1 & dec $end
$var wire 16 8 in [15:0] $end
$var wire 1 " load $end
$var reg 16 9 out [15:0] $end
$upscope $end
$scope module P $end
$var wire 1 ' clear $end
$var wire 1 ( clk $end
$var wire 1 ! load $end
$var wire 16 : in [15:0] $end
$var reg 16 ; out [15:0] $end
$upscope $end
$scope module add $end
$var wire 16 < in1 [15:0] $end
$var wire 16 = in2 [15:0] $end
$var reg 16 > out [15:0] $end
$upscope $end
$scope module eq $end
$var wire 16 ? in [15:0] $end
$var wire 1 $ out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 /
b11 .
b10 -
b1 ,
b0 +
$end
#0
$dumpvars
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x*
bx )
0(
x'
x&
x%
x$
x#
x"
x!
$end
#3
1*
#5
b0 0
1(
#6
0%
0&
0'
0!
0"
0#
#10
0(
#15
b1 0
1(
#16
1#
#17
b10001 )
b10001 1
b10001 6
b10001 8
#20
0(
#25
b10001 4
b10001 7
b10001 <
b10 0
1(
#26
1'
1"
0#
#27
b101 )
b101 1
b101 6
b101 8
#30
0(
#35
b10001 2
b10001 :
b10001 >
b11 0
0$
b101 5
b101 9
b101 ?
b0 3
b0 ;
b0 =
1(
#36
1&
0'
1!
0"
#40
0(
#45
b100010 2
b100010 :
b100010 >
b10001 3
b10001 ;
b10001 =
b100 5
b100 9
b100 ?
1(
#50
0(
#55
b110011 2
b110011 :
b110011 >
b11 5
b11 9
b11 ?
b100010 3
b100010 ;
b100010 =
1(
#60
0(
#65
b1000100 2
b1000100 :
b1000100 >
b110011 3
b110011 ;
b110011 =
b10 5
b10 9
b10 ?
1(
#70
0(
#75
b1010101 2
b1010101 :
b1010101 >
b1 5
b1 9
b1 ?
b1000100 3
b1000100 ;
b1000100 =
1(
#80
0(
#85
b1100110 2
b1100110 :
b1100110 >
b1010101 3
b1010101 ;
b1010101 =
1$
b0 5
b0 9
b0 ?
1(
#87
b100 0
#88
0&
0!
1%
#90
0(
#95
1(
#100
0(
#105
1(
#110
0(
#115
1(
#120
0(
#125
1(
#130
0(
#135
1(
#140
0(
#145
1(
#150
0(
#155
1(
#160
0(
#165
1(
#170
0(
#175
1(
#180
0(
#185
1(
#190
0(
#195
1(
#200
0(
#205
1(
#210
0(
#215
1(
#220
0(
#225
1(
#230
0(
#235
1(
#240
0(
#245
1(
#250
0(
#255
1(
#260
0(
#265
1(
#270
0(
#275
1(
#280
0(
#285
1(
#290
0(
#295
1(
#300
0(
#305
1(
#310
0(
#315
1(
#320
0(
#325
1(
#330
0(
#335
1(
#340
0(
#345
1(
#350
0(
#355
1(
#360
0(
#365
1(
#370
0(
#375
1(
#380
0(
#385
1(
#390
0(
#395
1(
#400
0(
#405
1(
#410
0(
#415
1(
#420
0(
#425
1(
#430
0(
#435
1(
#440
0(
#445
1(
#450
0(
#455
1(
#460
0(
#465
1(
#470
0(
#475
1(
#480
0(
#485
1(
#490
0(
#495
1(
#500
0(
#503
